<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:flowable="http://flowable.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" xmlns:design="http://flowable.org/design" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.activiti.org/test" design:palette="flowable-process-palette">
  <collaboration id="Collaboration">
    <participant id="pool1" name="Intake Business Asset" processRef="intakeBusinessAsset"></participant>
  </collaboration>
  <process id="intakeBusinessAsset" name="Propose New Business Asset" isExecutable="true">
    <documentation>This process can be used to propose new business assets. The term will be created using the entered characteristics and placed in the "Data Governance Council" community.</documentation>
    <extensionElements>
      <design:stencilid><![CDATA[BPMNDiagram]]></design:stencilid>
      <design:creationdate><![CDATA[2023-08-23T05:28:40.484Z]]></design:creationdate>
      <design:modificationdate><![CDATA[2023-09-07T11:08:43.418Z]]></design:modificationdate>
    </extensionElements>
    <laneSet id="laneSet_intakeBusinessAsset">
      <lane id="lane2">
        <flowNodeRef>endNoneEvent1</flowNodeRef>
        <flowNodeRef>startNoneEvent1</flowNodeRef>
        <flowNodeRef>scriptTask1</flowNodeRef>
        <flowNodeRef>sequenceFlow3</flowNodeRef>
        <flowNodeRef>sequenceFlow4</flowNodeRef>
      </lane>
    </laneSet>
    <endEvent id="endNoneEvent1" name="End">
      <extensionElements>
        <design:stencilid><![CDATA[EndNoneEvent]]></design:stencilid>
      </extensionElements>
    </endEvent>
    <startEvent id="startNoneEvent1" name="Start" flowable:formFieldValidation="false">
      <extensionElements>
        <flowable:formProperty id="intakeVocabulary" name="Enter the id of the vocabulary to take in the created term" type="string" default="00000000-0000-0000-0000-000000006017" readable="false" required="true"></flowable:formProperty>
        <flowable:formProperty id="signifier" name="Name" type="string" required="true"></flowable:formProperty>
        <flowable:formProperty id="conceptType" name="Type" type="assetType" required="true">
          <flowable:value id="proposedFixed" name="true"></flowable:value>
          <flowable:value id="proposedValues" name="00000000-0000-0000-0000-000000031107, 00000000-0000-0000-0000-000000011002, 00000000-0000-0000-0000-000000031104, 00000000-0000-0000-0000-000000011003, 00000000-0000-0000-0000-000000011001, 00000000-0000-0000-0000-000000031105, 00000000-0000-0000-0000-000000031103, 00000000-0000-0000-0000-000000031102, 00000000-0000-0000-0000-000000031101"></flowable:value>
        </flowable:formProperty>
        <flowable:formProperty id="definition" name="Proposed Definition" type="textarea"></flowable:formProperty>
        <flowable:formProperty id="usesrelation" name="Related Assets" type="term">
          <flowable:value id="multiValue" name="true"></flowable:value>
          <flowable:value id="conceptType" name="00000000-0000-0000-0000-000000031000"></flowable:value>
        </flowable:formProperty>
        <flowable:formProperty id="note" name="Reason for proposal" type="textarea"></flowable:formProperty>
        <flowable:formProperty id="submit" name="Propose" type="button" default="false"></flowable:formProperty>
        <flowable:work-form-field-validation><![CDATA[false]]></flowable:work-form-field-validation>
        <design:stencilid><![CDATA[StartNoneEvent]]></design:stencilid>
      </extensionElements>
    </startEvent>
    <scriptTask id="scriptTask1" name="Create Term" scriptFormat="groovy" flowable:autoStoreVariables="false">
      <extensionElements>
        <design:stencilid><![CDATA[ScriptTask]]></design:stencilid>
      </extensionElements>
      <script><![CDATA[
import com.collibra.dgc.core.api.dto.instance.asset.AddAssetRequest;
import com.collibra.dgc.core.api.dto.instance.asset.AddAssetRequest;
import com.collibra.dgc.core.api.dto.instance.asset.AddAssetRequest;
import com.collibra.dgc.core.api.dto.instance.asset.AddAssetRequest;
def definition = execution.getVariable("definition")
def definition = execution.getVariable("definition")
    .name(signifier)
    .displayName(signifier)
    .typeId(conceptType)
    .domainId(string2Uuid(intakeVocabulary))
    .build())
.getId()
addAttributeToAsset(newAssetUuid,definition,definitionAttributeTypeUuid)
addAttributeToAsset(newAssetUuid,note,noteAttributeTypeUuid)

addRelationsWithOneSourceAndMultipleTargetsToAsset(newAssetUuid,usesRelationTypeUuid,usesrelation)
execution.setVariable("outputCreatedTermId",uuid2String(newAssetUuid))
def addAttributeToAsset(assetUuid,attributeValue,attributeTypeUuid) {
    if (attributeValue == null){
        return;
    }
    attributeApi.addAttribute(AddAttributeRequest.builder()
        .assetId(assetUuid)
        .typeId(string2Uuid(attributeTypeUuid))
        .value(attributeValue.toString())
        .build())
}
def addRelationsWithOneSourceAndMultipleTargetsToAsset(sourceUuid,relationTypeUuid,targetUuidList) {
    def addRelationsRequests = []
    loggerApi.info("Source: " + sourceUuid.toString())
    loggerApi.info("Type: " + relationTypeUuid.toString())
    loggerApi.info("Target: " + targetUuidList.toString())
    loggerApi.info("Target Class" + targetUuidList.getClass().toString())
    targetUuidList.each{ t ->
    loggerApi.info("T Class" + t.getClass().toString())
    addRelationsRequests.add(AddRelationRequest.builder()
        .sourceId(sourceUuid)
        .targetId(t)
        .typeId(string2Uuid(relationTypeUuid))
        .build())
    }
    relationApi.addRelations(addRelationsRequests)
}]]></script>
    </scriptTask>
    <sequenceFlow id="sequenceFlow3" sourceRef="startNoneEvent1" targetRef="scriptTask1">
      <extensionElements>
        <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
      </extensionElements>
    </sequenceFlow>
    <sequenceFlow id="sequenceFlow4" sourceRef="scriptTask1" targetRef="endNoneEvent1">
      <extensionElements>
        <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
      </extensionElements>
    </sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_Collaboration">
    <bpmndi:BPMNPlane bpmnElement="Collaboration" id="BPMNPlane_Collaboration">
      <bpmndi:BPMNShape bpmnElement="pool1" id="BPMNShape_pool1">
        <omgdc:Bounds height="150.0" width="481.0" x="150.0" y="75.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="lane2" id="BPMNShape_lane2">
        <omgdc:Bounds height="150.0" width="451.0" x="180.0" y="75.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endNoneEvent1" id="BPMNShape_endNoneEvent1">
        <omgdc:Bounds height="28.0" width="28.0" x="560.0" y="135.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startNoneEvent1" id="BPMNShape_startNoneEvent1">
        <omgdc:Bounds height="30.0" width="30.0" x="240.0" y="135.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scriptTask1" id="BPMNShape_scriptTask1">
        <omgdc:Bounds height="80.0" width="100.0" x="345.0" y="109.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="sequenceFlow3" id="BPMNEdge_sequenceFlow3" flowable:sourceDockerX="15.0" flowable:sourceDockerY="15.0" flowable:targetDockerX="50.0" flowable:targetDockerY="40.0">
        <omgdi:waypoint x="269.9499933774537" y="150.0"></omgdi:waypoint>
        <omgdi:waypoint x="307.5" y="150.0"></omgdi:waypoint>
        <omgdi:waypoint x="307.5" y="149.0"></omgdi:waypoint>
        <omgdi:waypoint x="345.0" y="149.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sequenceFlow4" id="BPMNEdge_sequenceFlow4" flowable:sourceDockerX="50.0" flowable:sourceDockerY="40.0" flowable:targetDockerX="14.0" flowable:targetDockerY="14.0">
        <omgdi:waypoint x="444.9499999999051" y="149.0"></omgdi:waypoint>
        <omgdi:waypoint x="560.0" y="149.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>
